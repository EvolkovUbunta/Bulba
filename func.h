class car // класс-машина
{
    float time; // время, на которое машина занята
    float fuel; // кол-во топлива в баке машины
    coord loc;  // текущее местположение машины
    int type;   // тип машины (1-для взрослого человека, 2- для ребенка, 3 - для пожилых людей)
    int num;    // номер машины ( ее ведь надо как-то идентифицировать)
  public:
    float get_time() { return time; }
    float get_fuel() { return fuel; }
    coord get_loc() { return loc; }
    int get_type() { return type; }
    int get_num() { return num; }
    void change(coord a, int b); /*эта функция передвигает машину в указанную точку, отнимает бензин, добавляет время на дорогу и оказываемую услугу 
    (1-оказать первую помощь, 2-довести до больницы. Если нужно оказать первую помощь, то добавляется время на дорогу и на оказание первой помощи (в среднем 20 минут),
    а бензин отнимается только на дорогу от точки до точки, координаты меняются на координаты последнего больного. Если больного нужно довести до больницы, то время
    добавляется на дорогу до больного и дорогу от больного до больницы, бензит тратится, соответственно, на два промежутка пути, координаты машины меняются на местоположение
    больницы. */
    void refill(); /* эта функция страбатывает, если осталось меньше 10 литров (примерно). Она ищет ближайшую заправку, меняет координаты машины на координаты заправки, 
    тратит бензин на дорогу до заправки и добавляет время на дорогу до заправки и саму заправку. Тут возникает вопрос: что делать если машине не хватает бензина до заправки?
    Можно добавлять машине 1 час (например) за это время ей доставляют бензин, при этом ее координаты не меняются, а бак становится полным. */
}

class coord
{
    float x,y;
  public:
    float get_x() { return x; }
    float get_y() { return y; }
}

class call //класс- поступающий звонок
{
  coord cloc; //местоположение больного
  int ctype; //кому нужна помощь (1-взрослому человеку, 2-ребенку, 3-пожилому человеку)
  int cserv; //какая необходима помощь (1-оказать первую помощь, 2-довести до больницы)
}

float def_dis(const coord &a, const coord &b) //первый аргумент - начальное положение, второй - конечное положение
{
  float x=a.get_x();
  float y=a.get_y();
  float k=b.get_x();
  float m=b.get_y();
  float p=pow(pow(k-x,2)+pow(m-y,2),2);
  return p;
}
  